34: 인터페이스 상속과 구현 상속의 차이를 제대로 파악하고 구별하자

(public)상속 - 함수 인터페이스 상속
	     - 함수 구현의 상속


상속의 종류

	- 함수의 인터페이스와 구현 상속

	- 함수의 인터페이스와 구현 상속 하지만 오버라이드 가능

	- 함수의 인터페이스와 구현 상속 오버라이드 불가능

	- 함수의 인터페이스만 상속

* 순수 가상함수

	- 순수 가상 함수를 물려 받은 구체 클래스가 해당 순수 가상 함수를 다시 선언 해야함

	- 추상 클래스안에서 정의를 갖지 않습니다.

	"순수 가상 함수를 선언하는 목적은 파생클래스에게 함수의 인터페이스 만을 물려주려는 것입니다."
 
* 비순수 가상함수

	"함수의 인터페이스 뿐만 아니라 그 함수의 기본 구현도 물려 받게 하자는 것입니다."

protected defaultfly();

* 비가상함수

	- 클래스 파생에 상관없이 변하지 않는 동작

	"파생클래스가 함수 인터페이스와 더불어 그 함수의 필수적인 구현을 물려받게 하는것"