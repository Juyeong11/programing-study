자원관리는 객체가 하는게 좋다.

 소프트웨어 개발에 쓰이는 상당수의 자원이 힙에서 동적으로 할당되고,
하나의 블록 혹은 함수 안에서만 쓰이는 경우가 잦기 때문에 그 구역으로 부터 
실행 제어가 빠져 나올 때 자원이 해제되는 게 맞다.

 만약 자원의 생성과 삭제를 프로그래머가 함수의 시작과 끝에 해준다면 다시 생각해보자
중간에  return 문이나 goto등 이있다면 삭제가 안될 수도 있다.(유지보수 중에 추가 될수 있지)

 저런 경우 다시 생각해서 자원을 자원 관리 객체에게 넘기자 share_ptr auto_ptr등

 또 자원 관리 객체는 자신의 소멸자를 사용해서 자원이 확실하게 해제되도록 하자



**
 auto_ptr은 자신이 소멸될 때 자신이 가리키고 있는 대상을 자동으로 삭제
고로 객체를 가르키는 autoptr 이 두 개이면 안됨 그래서 이 객체를 복사하면 원본객체가
NULL이 됨
 share_ptr는 특정한 어떤 자원을 가리키는 외부 객체를 개수를 유지하고 있다가
그 개수가 0이 되면 삭제하기 때문에 복사시 동작이 더 직관적이다
하지만 참조상태가 서로를 가르키고 있다거나 이런경우가 있으면 없앨 수 없다.