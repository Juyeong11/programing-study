*****자원 관리 클래스의 복사 동작에 대해 진지하게 고찰하자

 모든 자원이 힙에 할당되지 않는다 -> 내가 자원 관리 클래스를 만들어야 할 때도 있다
-> RAII기법으로 만든다. -> RAII객체에 대한 보사시 할 동작

1. 복사 금지
2. 참조 카운팅 수행 -> 클래스 멤버를 sharde_ptr으로
3. 깊은 복사 
4. 자원 소유권 옮김

*****

*****자원 관리 클래스에서 관리되는 자원은 외부에서 접근 할 수 있도록 하자
     
 자원 관리 클래스를 이용하여 자원을 관리 할 시 객체가 관리 하는 포인터에 접근할 일이 생긴다.
이런 경우를 대비해 객체가 감싸고 있는 자원을 실제 자원으로 변환해 줄 수 있어야 한다.

1. 명시적 변환 *, -> , get()등 명시적으로 변환

2. 암시적 변환 (객체이름 == 실제 자원)

RAII 클래스 만의 특정한 용도와 사용환경에 맞게 설계하자
*****

***** new와 delete는 형태를 맞추자

 new의 표현식에 []을 썻으면 여기에 대응되는 delete표현식에도 []을 써야한다.