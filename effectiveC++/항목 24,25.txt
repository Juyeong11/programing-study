24 타입변환이 모든 매개변수에 대해 적용되어야 한다면 비멤버 함수를 선언하자

 클래스 멤버함수로 operator* 가 선언하여서 int * class()와 class() * int를 한다면
int형의 class로의 암시적 형변환이 허용되었다면 전자는 계산이 안되고 후자는 계산이 된다

class.operator*(int) int.operator*(class) 이런 차이가 있기 때문이다.

this객체에 대한 암시적 형변환은 할 수 없기 때문에 어떤 함수에 들어가는 모든 매개변수
(this가 가르키는 객체포함)에 대해 타입변환을 해 줄 필요가 있다면
그 함수는 비멤버 함수여야한다.

클래스 템플릿으로 만들경우 해결하는 방법이 달라진다 항목 46을 보자


25: 예외를 던지지 않는 swap에 대한 지원도 생각해보자

 표준에서 제공하는swap이 나의 클래스, 클래스 템플릿에 대해 납득할만한 성능이면
그냥 사용하도록 하자(swap은 복사동작을 3번한다)

 만약 효율이 떨어진다면 내가 만든 타입의 객체를 효율적으로 바꿔주는 swap함수를 만들고
public 멤버함수로 두도록하고(이 함수는 예외를 던져서는 안된다)

 클래스, 클래스 템플릿이 들어있는 네임스페이스에 비멤버 swap을 만들어 놓고 내가 만든 클래스의 swap
함수를 호출하도록 만든다

 만약 클래스라면 그 클래스에 대한 std::swap의 특수화 버전을 준비하고 이 버전도 클래스의 swap멤버함수를
호출하도록 해준다

 그 다음 함수를 호출할 때 using std::swap선언을 반드시 포함시킨다. (c++의 이름 탐색 규칙에 따라 내가 만든 swap을 호출해주기 위해)


std에는 어떤것도 새로 추가 하지 말자 오류난다.
 