항목 8: 예외가 소멸자를 떠나지 못하도록 붙들어 놓자

	 소멸자에서는 예외가 발생하면 안된다. 만약 발생한다면 어떤 예외든 받아내서
	객체가 소멸될수 있게 하던지 프로그램을 끝내도록하자 (try catch)



항목 9: 객체 생성 및 소멸 과정 중에는 절대로 가상 함수를 호출하지 말자

	 기본 클래스의 생성자가 호출될 동안에는, 가상 함수는 절대로 파생 클래스 쪽으로 내려
	가지 않는다.

	 클래스 객체의 기본 클래스 부분이 생성되는 동안은, 그 객체의 타입은 바로 기본
	클래스이다.



항목 10: 대입 연산자는 *this의 참조자를 반환하게 하자

 	관례대로 해야지 실수가 줄어들겠죠?



항목 11: operator= 에서는 자기 대입에 대한 처리가 빠지지 않도록 하자

	 operator= 를 구현할때 자기대입을 고려하자
	 operator= 를 구현할때 new의 예외을 고려하자

	 두 개 이상의 객체에 대해 동작하는 함수가 있다면, 이 함수에 넘겨지는 객체들이
	같은 객체인 경우에 정확하게 동작하는지 확인해보자