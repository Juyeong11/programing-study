 1. C++을 언어들의 연합체로 바라보는 안목은 필수
	C++은 서로다른 4개의 하위 언어로 이루어져 있다.
	그래서 사용하는 하위언어마다 적절한 사용 규칙이 있다.
		ex) C스타일로 쓰고 있으면 기본제공 타입에 대해서는 "값 전달이 참조 전달보다 대개 효율이 더 좋다" 라는
		    규칙이 통하지만 객체지향C++로 넘어가면 사용자정의 생성자/소멸자 개념이 생기면서
		    상수 객체 참조자에 의한 전달 방식이 더좋은 효율을 보인다.

 2. #define을 쓰려거든 const,enum,inline을 떠올리자
	메크로는 컴파일러에게 숫자 상수로 보이기 때문에 디버그시 기호식 이름이 안보여 디버그에 어려움이 있을 수 있다.
	메크로 대신 const를 사용하자 또 const를 사용하면 메크로보다 최종 코드의 크기가 작아질 수 있다. 사본의 등장횟수가 다르기 때문이다