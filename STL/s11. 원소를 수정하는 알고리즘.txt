#include<iostream>
#include<vector>
#include<algorithm>

using namespace std;


void Func(int& r)
{
	r += 5;
}

int Func1(int& r)
{
	return r + 5;
}
int Plus(int left, int right)
{
	return left+right;
}
bool Pred(int n)
{
	return 30<=n && n<=50;
}
int main()
{
	vector<int> v1;
	v1.push_back(10);
	v1.push_back(20);
	v1.push_back(30);
	v1.push_back(40);
	v1.push_back(50);
	
	vector<int> v2(5);
	vector<int>::iterator iter;
	
	//목적지 순차열로 복사 동작을 수행할 때 두 가지 모드의 복사 동작이 있습니다.
	//하나는 덮어쓰기모드이고, 하나는 삽입 모드입니다. 모든 알고리즘의 기본 동작은 덮어쓰기 모드이며 반복자 어댑터등을 이용하여 변경할 수 있습니다.
	iter = copy(v1.begin(),v1.end(),v2.begin());//v2.begin(), v2.end() + (v1.end() - v1.begin()) 이렇게 동작하므로 v1은 v2보다 커야한다.
	//목적지의 끝 반복자를 반환
	iter = copy_backward(v1.begin(),v1.end(),v2.end());//반대로 복사한다. 1->2
	
	fill(v1.begin(), v1.end(), 0);//해당구간의 원소를 모두 0으로 바꾼다.
	
	fill_n(v1.begin(), 3, 55);//구간+3의 원소를 모두 55로 바꾼다.
	
	for_each(v1.begin(), v1.end(), Func);//순차열의 원소를 모두 5씩 증가 시킨다.
	//함수 객체를 이용한다면 ()연산자를 사용하여 다양한 작업을 할 수 있다.
	vector<int> v3(10);
	
	iter = transform(v1.begin(),v1.end(),v2.begin(),Func1);// 구간에서 Func처리 한것을 v2에 넣는다. 목적지의 끝 반복자를 반환한다.
	iter = transform(v1.begin(),v1.end(),v2.begin(), v3.begin(),Plus);//순차열끼리의 합을 v3에 저장한다.
	//generate(v1.begin(),v.end(), integer(1));//for each()와 같다
	//for_each(), transform()과 다른점은 함수자의 매개변수로 순차열의 원소를 전달 받지 않기 때문에 원소가 가지고 잇는 원값을 활용 할 수 없다는 점이다.
	
	
	swap(v1,v2);//
	
	swap_ranges(v1.begin(), v1.end(), v2.begin());//v2.begin(), v2.end() + (v1.end() - v1.begin()) 이구간의 원소를 바꾼다.
	
	vector<int>::iterator p = v1.begin();
	vector<int>::iterator q = p+1;
	iter_swap(p, q);//반복자가 가르키고 있는 값을 바꾼다.
	
	
	
	merge(v1.begin(),v1.end(),v2.begin(),v2.end(),v3.begin());
	//v1과 v2를 v3에 합병 정렬해서 넣는다. 이 때 들어 가는 구간은 v3.begin부터 iter_end()까지이다.
	//이항 조건자를 이용해서 정렬 기준을 바꿀 수 있다.
	
	
	replace(v1.begin(), v1.end(), 30, 0);//구간에 있는 원소중 30에 해당하는 원소를 0으로 바꾼다.
	
	replace_if(v1.begin(),v1.end(),Pred,0);//단항 조건자의 조건에 해당하는 원소를 0으로 바꾼다.
	
	
	iter = replace_copy(v1.begin(), v1.end(), v2.begin(), 30, 0);//30인 원소를 모두 0으로 변환하여 v2.begin-iter.end 구간에 넣는다.
	
	iter = replace_copy_if(v1.begin(), v1.end(), v2.begin(), Pred, 0);//조건이 참인 원소를 모두 0으로 변환하여 v2.begin-iter.end 구간에 넣는다.

}